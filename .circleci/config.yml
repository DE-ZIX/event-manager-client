# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7
  cypress: cypress-io/cypress@1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

jobs:
  install:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - deps-yarn-lock-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - deps-yarn-packages-{{ .Branch }}-{{ checksum "package.json" }}
            - deps-{{ .Branch }}
            - deps
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.cache ## cache both yarn and Cypress!
  test-unit:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_cache:
          keys:
            - asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - asset-cache-v1-{{ arch }}-{{ .Branch }}
            - asset-cache-v1
      - run: yarn test:unit
  test-e2e:
    docker:
      - image: cypress/base:14.16.0
        environment:
            ## this enables colors in the output
            TERM: xterm
    steps:
      - checkout
      - restore_cache:
          keys:
            - asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - asset-cache-v1-{{ arch }}-{{ .Branch }}
            - asset-cache-v1
      - run: $(yarn bin)/cypress run --record --key <record_key>
workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - install
      - test-unit:
          requires:
              - install
      - test-e2e:
          requires:
              - install

