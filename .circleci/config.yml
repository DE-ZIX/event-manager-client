# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7
  cypress: cypress-io/cypress@1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
executors:
  cypress:
    docker:
      - image: 'cypress/base:14.16.0'
    environment:
      CYPRESS_RECORD_KEY: 747eced2-a43e-4eb4-9e1e-fcdaf7d57398
      CYPRESS_use_mock: true
jobs:
  install:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache ## cache both yarn and Cypress!
            - node_modules
  test-unit:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Run tests with JUnit reporter
          command: yarn test:unit --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
  test-e2e:
    docker:
      - image: cypress/base:14.16.0
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: yarn cypress run --record --key 747eced2-a43e-4eb4-9e1e-fcdaf7d57398
workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - install
      - test-unit:
          requires:
            - install
      - cypress/install:
          yarn: true
          build: yarn build # run a custom app build step
          executor: cypress
      - cypress/run:
          yarn: true
          executor: cypress
          requires:
            - cypress/install
          record: true # record results on Cypress Dashboard
          parallel: true # split all specs across machines
          parallelism: 4 # use 4 CircleCI machines to finish quickly
          group: 'all tests' # name this group "all tests" on the dashboard
          start: 'yarn serve' # start server before running tests
          post-steps:
            - store_test_results:
                path: cypress/results
